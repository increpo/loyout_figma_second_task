{
  "_from": "pug-loader",
  "_id": "pug-loader@2.4.0",
  "_inBundle": false,
  "_integrity": "sha512-cD4bU2wmkZ1EEVyu0IfKOsh1F26KPva5oglO1Doc3knx8VpBIXmFHw16k9sITYIjQMCnRv1vb4vfQgy7VdR6eg==",
  "_location": "/pug-loader",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "pug-loader",
    "fetchSpec": "latest",
    "name": "pug-loader",
    "raw": "pug-loader",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/pug-loader/-/pug-loader-2.4.0.tgz",
  "_shasum": "18eebdda045d9c31c2856f1cc3ceb8d3df7ca49a",
  "_shrinkwrap": null,
  "_spec": "pug-loader",
  "_where": "/home/nur/github/loyout_figma_second_task",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bugs": {
    "url": "https://github.com/pugjs/pug-loader/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "loader-utils": "^1.1.0",
    "pug-walk": "^1.0.0",
    "resolve": "^1.1.7"
  },
  "deprecated": false,
  "description": "Pug loader module for webpack",
  "devDependencies": {
    "mocha": "*",
    "pug": "^2.0.0",
    "should": "*"
  },
  "homepage": "https://github.com/pugjs/pug-loader#readme",
  "license": "MIT",
  "maintainers": [
    {
      "name": "Timothy Gu",
      "email": "timothygu99@gmail.com"
    }
  ],
  "name": "pug-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "pug": "^2.0.0"
  },
  "readme": "# pug-loader\n\nPug loader for webpack.\n\n## Usage\n\n``` javascript\nvar template = require(\"pug-loader!./file.pug\");\n// => returns file.pug content as template function\n\n// or, if you've bound .pug to pug-loader\nvar template = require(\"./file.pug\");\n\nvar locals = { /* ... */ };\n\nvar html = template(locals);\n// => the rendered HTML\n```\n\nFor more information on how to use webpack loaders, check the [official documentation][using-loaders].\n\nIn order to obtain the rendered HTML at compile time, combine this loader with [`apply-loader`](https://github.com/mogelbrod/apply-loader):\n\n```\nvar html = require(\"apply-loader!pug-loader!./file.pug\");\n// => the HTML is rendered at compile time\n```\n\n### Legacy `.jade` files\n\npug-loader fully supports `.jade` files. Just use pug-loader with `.jade` files as you would with a `.pug` file.\n\n### Includes\n\nIf you are using [includes], you must make sure that `.pug` (and if needed for legacy files, `.jade`) is bound to pug-loader. Check the webpack documentation on how to do that for [CLI][module-bind-cli] and for [configuration files][module-bind-config].\n\n### Options\n\nThe following [options] are available to be set for the loader. They are all mapped directly to Pug options, unless pointed out otherwise.\n\n- `doctype`\n  - Unlike Pug, it defaults to `\"html\"` if not set\n- `globals`\n- `self`\n- `plugins`\n  - Note that you cannot specify any Pug plugins implementing `read` or `resolve` hooks, as those are reserved for the loader\n- `pretty`\n- `filters`\n- `root`\n  - webpack uses its own file resolving mechanism, so while it is functionally equivalent to the Pug option with the same name, it is implemented differently\n\n### Embedded resources\n\nTry to use `require` for all your embedded resources, to process them with webpack.\n\n```pug\ndiv\n  img(src=require(\"./my/image.png\"))\n```\n\nRemember, you need to configure loaders for these file types too. You might be interested in the [file loader][file-loader].\n\n## License\n\n[MIT][mit]\n\n[file-loader]: https://github.com/webpack/file-loader\n[includes]: https://pugjs.org/language/includes.html\n[mit]: https://www.opensource.org/licenses/mit-license.php\n[module-bind-cli]: https://webpack.js.org/concepts/loaders/#via-cli\n[module-bind-config]: https://webpack.js.org/concepts/loaders/#configuration\n[options]: https://webpack.js.org/configuration/module/#useentry\n[using-loaders]: https://webpack.js.org/loaders\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/pugjs/pug-loader.git"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "version": "2.4.0"
}
